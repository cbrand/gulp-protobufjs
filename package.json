{
  "name": "gulp-protobufjs",
  "description": "Converts profobuf files to json files being usable in protobufjs",
  "version": "1.3.0",
  "homepage": "https://github.com/cbrand/gulp-protobufjs",
  "author": {
    "name": "Christoph Brand"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cbrand/gulp-protobufjs"
  },
  "bugs": {
    "url": "https://github.com/cbrand/gulp-protobufjs/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/cbrand/gulp-protobufjs/blob/master/LICENSE"
    }
  ],
  "dependencies": {
    "gulp-util": "~3.0.1",
    "protobufjs": "~6",
    "q": "^1.4.1",
    "vinyl": "^0.5.0",
    "through2": "^0.6.5"
  },
  "devDependencies": {
    "chai": "^3.0.0",
    "gulp": "^3.9.0",
    "gulp-istanbul": "^0.10.0",
    "gulp-jscs": "^1.6.0",
    "gulp-jshint": "^1.11.0",
    "gulp-mocha": "^2.1.1",
    "jshint-stylish": "^2.0.0",
    "mocha": "^2.2.5",
    "mocha-junit-reporter": "^1.4.0",
    "should": "^6.0.3"
  },
  "scripts": {
    "test": "node_modules/mocha/bin/mocha test/*.js test/**/*.js --reporter spec"
  },
  "keywords": [
    "gulpplugin",
    "protobufjs",
    "protobuf"
  ],
  "readme": "# [gulp](https://github.com/wearefractal/gulp)-protobufjs\n[Downloads](https://npmjs.org/package/gulp-protobufjs)\n\n> Converts protobuf files utilizing the [protobufjs](https://github.com/dcodeIO/ProtoBuf.js/) library.\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/gulp-protobufjs).\n\n```\nnpm install --save-dev gulp-protobufjs\n```\n\n## Examples\n\n```js\nvar gulp = require('gulp');\nvar gulpprotobuf = require('gulp-protobufjs');\n\ngulp.task('default', function () {\n  return gulp.src('file.proto')\n    .pipe(gulpprotobuf())\n    .pipe(gulp.dest('out/'));\n});\n```\n\n## API\n\n`gulpprotobuf(options)`\n* `options`:\n    * `input`: (default `protobuf`) Input format. Can be either `protobuf` or `json`\n    * `target`: (default `commonjs`) Output format. Can be `amd`, `commonjs`, `js`, `json` or `proto`.\n    * `path`: Optional path to specify where the base path for the proto imports is.\n    * `encoding` (default `utf-8`) Encoding which should be used to parse the input files.\n    * `ext` The file extension which should be set. Is being determined automatically if not given depending on the `target` configuration.\n    * `noErrorReporting` (default `false`) Gulp ignores errors on the console for asynchronous operations. Because of that when an error occurs during processing it will be manually added to the console. If this is not wanted the flag disables it.\n    * `showStack` (default `false`) Indication if the stack of an error should be printed to console or not. Per default this is off to keep the formatting in the command line clean. \n\n## License\n\n[MIT](http://en.wikipedia.org/wiki/MIT_License) @ Christoph Brand\n",
  "readmeFilename": "README.md",
  "_id": "gulp-protobufjs@1.0.0",
  "_from": "gulp-protobufjs@~1.0.0"
}
